name: VPS Status Monitor

on:
  push:
    branches: [ main ]
  workflow_dispatch:
  schedule:
    - cron: '*/5 * * * *'

jobs:
  check-vps-status:
    runs-on: ubuntu-latest
    
    permissions:
      contents: write

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v3
      with:
        python-version: '3.9'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install requests urllib3

    - name: Verbose VPS Status Check
      env:
        SG_VPS_URL: ${{ secrets.SG_VPS_URL }}
        US_VPS_URL: ${{ secrets.US_VPS_URL }}
      run: |
        python3 - << EOF
        import requests
        import json
        from datetime import datetime
        import os
        import traceback
        import urllib3

        # Disable SSL warnings
        urllib3.disable_warnings(urllib3.exceptions.InsecureRequestWarning)

        def advanced_vps_status_check(url):
            print(f"\n--- Checking URL: {url} ---")
            try:
                # Comprehensive request with detailed error handling
                response = requests.get(
                    url, 
                    timeout=15,  # Increased timeout
                    verify=False,  # Disable SSL verification
                    allow_redirects=True
                )

                print(f"Full Response Details:")
                print(f"Status Code: {response.status_code}")
                print("Response Headers:")
                for key, value in response.headers.items():
                    print(f"  {key}: {value}")
                
                print("Response Content:")
                print(response.text[:500])  # Print first 500 characters

                return {
                    'status': response.status_code in [200, 204, 301, 302],
                    'uptime': f'HTTP Status: {response.status_code}',
                    'last_checked': datetime.now().strftime('%Y-%m-%d %H:%M:%S'),
                    'response_details': {
                        'status_code': response.status_code,
                        'headers': dict(response.headers)
                    }
                }
            except requests.RequestException as req_err:
                print(f"Request Error: {req_err}")
                traceback.print_exc()
                return {
                    'status': False,
                    'uptime': f'Request Error: {req_err}',
                    'last_checked': datetime.now().strftime('%Y-%m-%d %H:%M:%S'),
                    'error_details': str(req_err)
                }
            except Exception as general_err:
                print(f"Unexpected Error: {general_err}")
                traceback.print_exc()
                return {
                    'status': False,
                    'uptime': f'Unexpected Error: {general_err}',
                    'last_checked': datetime.now().strftime('%Y-%m-%d %H:%M:%S'),
                    'error_details': str(general_err)
                }

        # Get URLs from environment variables
        sg_url = os.environ.get('SG_VPS_URL')
        us_url = os.environ.get('US_VPS_URL')

        print("Environment Variables:")
        print(f"Singapore VPS URL: {sg_url}")
        print(f"US VPS URL: {us_url}")

        # Check VPS status with detailed logging
        sg_status = advanced_vps_status_check(sg_url)
        us_status = advanced_vps_status_check(us_url)

        # Prepare status dictionary
        status = {
            'singapore': sg_status,
            'us': us_status
        }

        # Write status to JSON file with indentation
        with open('vps_status.json', 'w') as f:
            json.dump(status, f, indent=2)

        print("\n--- VPS Status Check Complete ---")
EOF

    - name: Commit and Push Changes
      run: |
        git config user.name github-actions
        git config user.email github-actions@github.com
        git add vps_status.json
        git commit -m "Update VPS status" || echo "No changes to commit"
        git push
