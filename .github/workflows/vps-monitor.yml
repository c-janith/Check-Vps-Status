name: VPS Status Monitor

on:
  schedule:
    - cron: '*/5 * * * *'  # Every 5 minutes
  workflow_dispatch:  # Manual trigger

jobs:
  check-vps-status:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v3
      with:
        python-version: '3.9'
    
    - name: Install Dependencies
      run: pip install requests

    - name: Check VPS Status
      env:
        SG_VPS_URL: ${{ secrets.SG_VPS_URL }}
        US_VPS_URL: ${{ secrets.US_VPS_URL }}
      run: |
        python3 - << EOF
        import requests
        import json
        from datetime import datetime
        import os
        import socket
        import urllib3

        # Disable SSL warnings if needed
        urllib3.disable_warnings(urllib3.exceptions.InsecureRequestWarning)

        def check_vps_status(url):
            try:
                # More comprehensive check
                response = requests.head(
                    url, 
                    timeout=10, 
                    verify=False,  # Use carefully
                    allow_redirects=True
                )
                
                # Additional network checks
                parsed_url = urllib3.util.parse_url(url)
                socket.gethostbyname(parsed_url.host)

                return {
                    'status': response.status_code == 200,
                    'uptime': 'Network Accessible',
                    'last_checked': datetime.now().strftime('%Y-%m-%d %H:%M:%S'),
                    'response_code': response.status_code
                }
            except Exception as e:
                return {
                    'status': False,
                    'uptime': f'Error: {str(e)}',
                    'last_checked': datetime.now().strftime('%Y-%m-%d %H:%M:%S'),
                    'error_details': repr(e)
                }

        # Get URLs from environment variables
        sg_url = os.environ.get('SG_VPS_URL')
        us_url = os.environ.get('US_VPS_URL')

        # Check VPS status
        status = {
            'singapore': check_vps_status(sg_url),
            'us': check_vps_status(us_url)
        }

        # Write status to JSON file
        with open('vps_status.json', 'w') as f:
            json.dump(status, f, indent=2)
        EOF

    - name: Commit and Push Changes
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add vps_status.json
        git commit -m "Update VPS status" || echo "No changes to commit"
        git push
